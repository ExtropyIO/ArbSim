"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cursor = void 0;
const long_1 = __importDefault(require("long"));
exports.Cursor = {
    /**
     * Creates a new cursor with only the `orderKey` set.
     *
     * Notice that this cursor does not uniquely identify a message in the stream
     * and may result in missing information.
     */
    createWithOrderKey: (order) => {
        return {
            orderKey: long_1.default.fromValue(order),
            uniqueKey: new Uint8Array(),
        };
    },
    /**
     * Creates a new cursor with both order and unique keys.
     *
     * This cursor uniquely identifies a message in the stream, even if it has
     * been invalidated.
     */
    create: (order, unique) => {
        return {
            orderKey: long_1.default.fromValue(order),
            uniqueKey: unique,
        };
    },
    /**
     * Creates a new cursor from a plain Javascript object.
     */
    fromObject({ orderKey, uniqueKey }) {
        return {
            orderKey: long_1.default.fromString(orderKey),
            uniqueKey: Buffer.from(uniqueKey.slice(2), "hex"),
        };
    },
    /**
     * Returns the cursor string representation.
     */
    toString: (cursor) => {
        if (!cursor)
            return;
        const { orderKey, uniqueKey } = _toObject(cursor);
        return `${orderKey}/${uniqueKey}`;
    },
    /**
     * Returns the cursor as plain Javascript object.
     */
    toObject: (cursor) => {
        if (!cursor)
            return;
        return _toObject(cursor);
    },
};
function _toObject(cursor) {
    const hash = Buffer.from(cursor.uniqueKey).toString("hex");
    return {
        orderKey: cursor.orderKey.toString(),
        uniqueKey: `0x${hash}`,
    };
}
//# sourceMappingURL=cursor.js.map