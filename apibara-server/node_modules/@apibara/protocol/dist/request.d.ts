import Long from "long";
import { v1alpha2 } from "./proto";
export declare const StreamDataRequest: {
    /**
     * Start building a `StreamData` request.
     */
    create: () => StreamDataRequestBuilder;
};
export declare class StreamDataRequestBuilder {
    private request;
    constructor();
    /**
     * Set the new stream id.
     */
    withStreamId(streamId: number | Long): this;
    /**
     * Set the number of items in each response batch.
     */
    withBatchSize(size: number | Long): this;
    /**
     * Set the cursor from where to resume streaming.
     */
    withStartingCursor(cursor: v1alpha2.ICursor): this;
    /**
     * Set the request finality for data.
     */
    withFinality(finality: v1alpha2.DataFinality): this;
    /**
     * Set the stream-specific filter.
     */
    withFilter(filter: Uint8Array): this;
    /**
     * Build and return the request.
     */
    encode(): v1alpha2.IStreamDataRequest;
}
